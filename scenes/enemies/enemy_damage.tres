[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://brqjaqb8uif4s"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h2hxd"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_hmjnv"]
parameter_name = "Hit"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_i6qyg"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(0.2, 0.2, 0.2), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_sfvp7"]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool Hit = false;



void fragment() {
// BooleanParameter:4
	bool n_out4p0 = Hit;


	vec3 n_out6p0;
// If:6
	float n_in6p1 = 1.00000;
	float n_in6p2 = 0.00001;
	vec3 n_in6p3 = vec3(0.20000, 0.20000, 0.20000);
	vec3 n_in6p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in6p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out4p0 ? 1.0 : 0.0) - n_in6p1) < n_in6p2)
	{
		n_out6p0 = n_in6p3;
	}
	else if((n_out4p0 ? 1.0 : 0.0) < n_in6p1)
	{
		n_out6p0 = n_in6p5;
	}
	else
	{
		n_out6p0 = n_in6p4;
	}


// Input:2
	vec4 n_out2p0 = COLOR;


// VectorOp:8
	vec3 n_out8p0 = n_out6p0 + vec3(n_out2p0.xyz);


// Output:0
	COLOR.rgb = n_out8p0;


}
"
graph_offset = Vector2(-318.72, -76.12)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1460, 380)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_h2hxd")
nodes/fragment/2/position = Vector2(-300, 580)
nodes/fragment/4/node = SubResource("VisualShaderNodeBooleanParameter_hmjnv")
nodes/fragment/4/position = Vector2(-300, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeIf_i6qyg")
nodes/fragment/6/position = Vector2(260, 60)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_sfvp7")
nodes/fragment/8/position = Vector2(860, 160)
nodes/fragment/connections = PackedInt32Array(4, 0, 6, 0, 6, 0, 8, 0, 2, 0, 8, 1, 8, 0, 0, 0)
