[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://sgr6eh0505ts"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_yhbih"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(200, 0, 0), 4, Vector3(1, 1, 1), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_w70n5"]
parameter_name = "IsUnaffordable"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_pk50m"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05, 3, Vector3(200, 150, 0), 4, Vector3(1, 1, 1), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bddjy"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_l2320"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_cek7e"]
parameter_name = "IsInvalidPlacement"
default_value_enabled = true

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_2hldm"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(100, 0, 0)]
operator = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool IsUnaffordable = false;
uniform bool IsInvalidPlacement = false;



void fragment() {
// BooleanParameter:11
	bool n_out11p0 = IsUnaffordable;


// BooleanParameter:8
	bool n_out8p0 = IsInvalidPlacement;


	vec3 n_out10p0;
// If:10
	float n_in10p1 = 1.00000;
	float n_in10p2 = 0.00001;
	vec3 n_in10p3 = vec3(200.00000, 0.00000, 0.00000);
	vec3 n_in10p4 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in10p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out8p0 ? 1.0 : 0.0) - n_in10p1) < n_in10p2)
	{
		n_out10p0 = n_in10p3;
	}
	else if((n_out8p0 ? 1.0 : 0.0) < n_in10p1)
	{
		n_out10p0 = n_in10p5;
	}
	else
	{
		n_out10p0 = n_in10p4;
	}


	vec3 n_out12p0;
// If:12
	float n_in12p1 = 1.00000;
	float n_in12p2 = 0.00001;
	vec3 n_in12p3 = vec3(200.00000, 150.00000, 0.00000);
	vec3 n_in12p4 = vec3(1.00000, 1.00000, 1.00000);
	if(abs((n_out11p0 ? 1.0 : 0.0) - n_in12p1) < n_in12p2)
	{
		n_out12p0 = n_in12p3;
	}
	else if((n_out11p0 ? 1.0 : 0.0) < n_in12p1)
	{
		n_out12p0 = n_out10p0;
	}
	else
	{
		n_out12p0 = n_in12p4;
	}


// Input:5
	vec4 n_out5p0 = COLOR;
	float n_out5p4 = n_out5p0.a;


// ColorOp:9
	vec3 n_out9p0 = abs(n_out12p0 - vec3(n_out5p0.xyz));


// FloatOp:7
	float n_in7p1 = 0.50000;
	float n_out7p0 = n_out5p4 * n_in7p1;


// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out7p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(920, 40)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_bddjy")
nodes/fragment/5/position = Vector2(-640, 0)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_l2320")
nodes/fragment/7/position = Vector2(400, 180)
nodes/fragment/8/node = SubResource("VisualShaderNodeBooleanParameter_cek7e")
nodes/fragment/8/position = Vector2(-1060, -600)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorOp_2hldm")
nodes/fragment/9/position = Vector2(380, -160)
nodes/fragment/10/node = SubResource("VisualShaderNodeIf_yhbih")
nodes/fragment/10/position = Vector2(-440, -600)
nodes/fragment/11/node = SubResource("VisualShaderNodeBooleanParameter_w70n5")
nodes/fragment/11/position = Vector2(-900, -800)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_pk50m")
nodes/fragment/12/position = Vector2(-60, -800)
nodes/fragment/connections = PackedInt32Array(5, 4, 7, 0, 7, 0, 0, 1, 5, 0, 9, 1, 9, 0, 0, 0, 8, 0, 10, 0, 11, 0, 12, 0, 12, 0, 9, 0, 10, 0, 12, 5)
